知识点回顾：
1.if语句
2.switch语句
3.for循环
4.while循环
5.do while循环
--
continue语句与break语句
continue语句使用 循环语句，表示：
结束本轮循环，开始下一轮循环[如果还满足条件的话]

如：
for(int i=1;i<10;i++){
  //被3整除的数，不需要打印
  if(i % 3 == 0){
	continue; //结束本轮循环。
  }
  System.out.println(i);
}

--
break 语句
使用在循环或switch中，用在循环中，表示中断(退出)
自己所在的那层循环。
用在switch中，表示退出switch语句。

如：
for(int i=1;i<10;i++){
   if(i % 3 ==0){
	break;
   }
   System.out.println(i);
}

--
课程大纲：
1.格式化输出
2.方法的定义
3.数组

--
格式化输出
目的就是可以定制输出时的格式。
减少字符串的拼接。

int i = 10;
int j = ++i + i++;
System.out.println("i = "+i+",j = "+j);
//格式化输出
System.out.printf("i = %d,j = %d\n",i,j);

--
格式化输时，占位符的语法:
%[argument_index$][flags][width][.precision]conversion
conversion 有：
  d	代表整数
  f	代表浮点数
  b	代表布尔值
  s	代表字符串
  %	代表%本身 
  ...

--
argument_index$ 表示把占位符与后面的参数对应起来。
如果不写此选项，则一一对应。
如：
int i = 0;
System.out.printf("%1$d*%1$d=%2$d\n",i,i*i);

flags 代表特殊标记，如：- 代表左对齐,默认是右对齐

width 代表格式化后的字符所占的宽度。

.precision 代表浮点数的精度，也就是小数位。
	只对格式化浮点数有效。

如：
double d = 13.5; //13.500
float f = 121.2342342342;
System.out.printf("d=%8.3f, f=%.1f\n",d,f);

--
方法的定义
语法：
修饰符 返回类型 方法名([参数列表])[申明的异常]{
	//方法体
}

修饰符，就是用来修饰方法的一些关键字。
访问控制修饰符：public/protected\[默认]\private
特殊的修饰符：static/final/abstract/synchronized/...

注：修饰符可以写多个，他们之间没有顺序。
所以，main方法也可以写成：
static public void main(String[] args){
}

--
返回类型
表示一个方法执行过程中，是否需要返回运算结果。
如果不需要返回运算结果，则把这个方法的返回类型
定义为 void
如果方法需要返回运算结果，同返回类型就不能指定
为void，而应该一种有效的数据类型(含基本类型).
并用，在方法体中使用关键字 return 来返回结果。

注：即使一个方法的返回类型是void，在它的方法体
中也可以使用return 空语句。

--
方法名
用来标识或记住一个方法的名称。
只要是合法的标识符都可以成为方法名。

首字母最好小写，如果由多个单词组成，第二单词开始
，首字母大写。如：toBinaryString,nextInt,...

--
参数列表(parameters list)
它是方法的"输入"，可以有多个参数，多个参数之间
使用逗号, 隔开

方法的参数也叫 “形参”。【方法定义的叫法】
调用者所传递给方法的参数，叫做“实参” 【调用者的叫法】

形参的定义语法：
类型 参数名
如果有多个形参，请使用逗号隔开


如：定义一个方法(求2个整数之和)如下：
public int add(int a,int b){
   //方法体：实业方法的业务
   int r = a+b;
   return r;
}
//定义一个方法，判断一个整数是否是偶数?
public boolean isEven(int a){
   //实现
   boolean b = (a & 1) == 0;
   return b;
}

//定义一个方法，判断一个整数是否是质数
public boolean isPrime(int a){ 
}

//定义一个方法，打印出给定范围内所有的质数。
public void printPrime(int start,int end){
}

--
main方法的参数
由于main方法是由JVM负责调度的，所以，main方法的
参数由JVM来传递，这是JVM预留给程序执行者把运行时
的值传递给main方法的途径。

--
方法调用的过程：
当发生方法调用时，首先，会把实参的值copy一份给
到形参。此时，方法的执行权会给到被调用的方法，
同时，JVM会记录下“返回点”，然后，等待被调用方法
的执行完成(遇到return语句或方法结束符)，最后。
方法的执行权又会回到原调用者。

--
JAVA的内存结构
大致划分成三个部份：
1.栈区 stack area
  特点：存取速度快、
  但不支持动态分配，必需确定大小

  JVM用它主要来存放 局部变量、引用

注：变量的类型为基本类型时，大小是固定的。
只有当变量的类型是对象类型，才会有引用，引用
相当于"c/c++"的指针，它占用4个字节。本质上，
引用就是“地址”.

2.堆区 heap area
  特点：支持动态分配，大小可以在运行时确定。
  
  JVM用它主要来存放 对象本身。

3.永久区/代码区 Permanent area
  JVM用它主要来存放 字节码本身、方法、静态属性
  常量 等不会发生变化的数据。

--
如：
int i = 10;
变量i存放在栈区，由于是基本类型，存放的就是
值本身,不是地址
Scanner scan = new Scanner(System.in);
变量scan是引用(指向Scanner的引用)，它存放的是
地址，存在栈区。而它指向的对象存放在堆区。

--
GC, Garbage Collection 垃圾回收器
它是JVM进程中的一个后台(守护)线程，它负责回收
没有引用指向的对象。

--

作业：
1. 有一种数叫水仙花数，它的定义是：
如果一个n(n>=3)位数的每一位的n次幂之和等于它本身
那么这个数就是水仙花数。

如：371 = 3^3+7^3+1^1 成立，那么371就是水仙花数。

请编写程序，打印出100~1000以下的所有水仙花数。

【附加题】：打印给定位数的水仙花数.

2.设定一个程序，把给定秒数转换成如下格式：
比如，给定 30，则返回： 30秒
给定1145, 则返回: 19分钟5秒
给定 3700, 则返回：1小时1分钟40秒.




















